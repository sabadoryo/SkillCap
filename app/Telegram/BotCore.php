<?php


namespace App\Telegram;


use Illuminate\Support\Facades\Log;
use Longman\TelegramBot\Entities\InlineKeyboard;
use Longman\TelegramBot\Entities\InlineKeyboardButton;
use Longman\TelegramBot\Request as TelegramRequest;

trait BotCore
{
    public function sendWelcomeMessage($data, $user)
    {
        $hiMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è <b>SkillBot</b>\n–ú–æ—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞, —ç—Ç–æ —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–≤–æ–µ–º –Ω–∞—Ä–∞—Å—Ç–∞—é—â–µ–º —Å–∫–∏–ª–ª–µ. –¢—ã –º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π –∏ —è –±—É–¥—É –≤–µ—Å—Ç–∏ –æ—Ç—á–µ—Ç!\n–ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–ª–∏ –Ω–æ–≤–æ–µ —Ç—ã –æ—Ç—Ä–∫—ã–ª –¥–ª—è —Å–µ–±—è —Å–µ–≥–æ–¥–Ω—è? –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Å–µ-—á—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥—É–º–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫–∏–ª–ª –∏ –≤—Å–µ –ø–æ—Ö–æ–∂–∏–µ —Å —Ç–æ–π –∂–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π.",
            'parse_mode' => 'HTML'
        ]);


        if ($hiMessage->isOk()) {
            TelegramRequest::sendMessage([
                'chat_id' => $data['chat_id'],
                'text' => "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä —è —Å–µ–≥–æ–¥–Ω—è –Ω–∞—É—á–∏–ª–∞—Å—å –≥–æ—Ç–æ–≤–∏—Ç—å —è–∏—â–Ω–∏—Ü—É, –∏ –Ω–∞–∑–≤–∞–ª–∞ –±—ã –∫–∞—Ç–µ–≥–æ—Ä–∏—é —ç—Ç–æ–≥–æ —Å–∫–∏–ª–ª–∞ <b>–ì–æ—Ç–æ–≤–∫–∞</b> –∏–ª–∏ <b>–ö—É—Ö–Ω—è</b> \n–ê –≤–æ–æ–±—â–µ –Ω–∞–∑—ã–≤–∞–π –∫–∞–∫ —Ö–æ—á–µ—à—åüòã",
                'parse_mode' => 'HTML'
            ]);
        }
    }

    public function sendFirstSkillSuccessMessage($data, $user)
    {
        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–û–≥–æ–æ, –∫—Ä—É—Ç–æ! –¢–æ–∂–µ –Ω–∞ –¥–Ω—è—Ö –ø–æ–ø—Ä–æ–±—É—é –∏–∑—É—á–∏—Ç—å —ç—Ç–æ \n –ù–æ —Ç—ã –Ω–µ —Ç–µ—Ä—è–π —Ö–≤–∞—Ç–∫—É, –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ. –ñ–¥—É –æ—Ç —Ç–µ–±—è –≤–µ—Å—Ç–µ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!"
        ]);
    }

    public function sendWrongFormatSkillMessage($data, $user)
    {
        $wrongFormatMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ö–∞–∂–µ—Ç—Å—è –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! \n <b>SkillCategory : SkillDescription</b>",
            'parse_mode' => 'HTML'
        ]);

        TelegramRequest::sendSticker([
            'chat_id' => $data['chat_id'],
            'sticker' => 'CAACAgIAAxkBAAPHYC663QABQ2nOT7Ay4iKQyj7eO8avAAIFAAN1UIETZmBnin0s48QeBA'
        ]);

    }

    public function sendDefaultSkillSuccessMessage($data, $user)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ó–∞–ø–∏—Å–∞–ª! –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å—Å—èüöÄ"
        ]);

        $result = TelegramRequest::sendSticker([
            'chat_id' => $data['chat_id'],
            'sticker' => 'CAACAgIAAxkBAAN3YC6PmqXOgqXKI7IX0XLBKSgC9w4AAggAA3VQgRM_fvm4Yh7Dhh4E'
        ]);

    }

    public function sendUnknownCommandMessage($data, $user)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–•—ã–º, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã, –Ω–æ —è –æ–±–µ—â–∞—é –Ω–∞—É—á–∏—Ç—å—Å—è"
        ]);

        $result = TelegramRequest::sendSticker([
            'chat_id' => $data['chat_id'],
            'sticker' => 'CAACAgIAAxkBAAO6YC64kfs5vx_bCtSF4DERHesRa0AAAvkmAAJLagMAASSlgZE1pac6HgQ'
        ]);

    }

    public function sendCurrentDevStatusMessage($data, $user)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ü–æ–∫–∞ —á—Ç–æ, –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ –æ—á–µ–Ω—å —Ä–∞–Ω–Ω–µ–π —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.üåû \n–í —Å–∫–æ—Ä–æ–º –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∞, <b>—Å –Ω–æ–≤—ã–º–∏ —Ñ–∏—á–∞–º–∏(–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, —Å–ø—Ä–∏–Ω—Ç—ã)</b> \n–ê –Ω—É —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —É –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç —Å–≤–æ–π <i>iqScore</i>üò± \n–ü–æ–∫–∞ —á—Ç–æ, —ç—Ç–æ –∑–∞–≥–∞–¥–∫–∞<s>(—è —Å–∞–º –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —ç—Ç–æ)</s>",
            'parse_mode' => 'HTML'
        ]);

        $result = TelegramRequest::sendSticker([
            'chat_id' => $data['chat_id'],
            'sticker' => 'CAACAgIAAxkBAAO5YC62Gw3LkTpMlf_g0ptseBeQXjwAAl8rAAJLagMAARqBSyqErwe8HgQ'
        ]);
    }

    public function sendWeKnowEachOtherMessage($data, $user)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ü—Ä–∏–≤)"
        ]);
    }

    public function sendStickerRecognitionSoonMessage($data, $user)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ –∑–Ω–∞—é, —á–µ–º –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —ç—Ç–æ :/, –Ω–æ –∑–∞—Ç–æ —Å–∫–æ—Ä–æ —Å–º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞—Ç—å —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ —Å—Ç–∏–∫–µ—Ä—É :3"
        ]);
    }

    public function sendFirstCategorySuccessMessage($data, $userCategories)
    {

        $reply_markup = $this->generateReplyMarkupForCategories($userCategories);

        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–û—Ç–ª–∏—á–Ω–æ!\n –¢–µ–ø–µ—Ä—å <b>".$data['text']."</b> –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ç–≤–æ–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ù–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–∏–ª–ª–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.",
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    public function generateReplyMarkupForCategories($items)
    {

        $itemsArray = array_map(function ($cat) {
            return [
                'text' => $cat['title'].'('.$cat['skills_count'].')',
                'callback_data' => $cat['id'],
            ];
        }, $items->toArray());

        $max_per_row = 2;
        $per_row = sqrt(count($itemsArray));
        $rows = array_chunk($itemsArray, $per_row === floor($per_row) ? $per_row : $max_per_row);
        $reply_markup = new InlineKeyboard(...$rows);

        return $reply_markup;
    }

    public function generateReplyMarkupForSkills($items)
    {
        $itemsArray = array_map(function ($cat) {
            return [
                'text' => $cat['description'],
                'callback_data' => 'none',
            ];
        }, $items->toArray());

        array_unshift($itemsArray, [
            'text' => '–î–æ–±–∞–≤–∏—Ç—å',
            'callback_data' => 'addNewSkill',
        ]);

        $max_per_row = 1;
        $per_row = sqrt(count($itemsArray));
        $rows = array_chunk($itemsArray, $per_row === floor($per_row) ? $per_row : $max_per_row);
        $reply_markup = new InlineKeyboard(...$rows);

        return $reply_markup;

    }


    public function editPreviousMessageAndShowSkillList($data, $category)
    {
        $reply_markup = $this->generateReplyMarkupForSkills($category->skills);

        $result = TelegramRequest::editMessageText([
            'chat_id' => $data['message']['chat']['id'],
            'text' => '–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Å–≤–æ–π —Å–∫–∏–ª–ª –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '.$category->title.',–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –Ω–∞–≤—ã–∫–∞.',
            'message_id' => $data['message']['message_id']
        ]);

        TelegramRequest::editMessageReplyMarkup([
            'chat_id' => $data['message']['chat']['id'],
            'message_id' => $data['message']['message_id'],
            'reply_markup' => $reply_markup,
        ]);
    }

    public function sendAskingForNewSkillMessage($data)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–û–∫–µ–π,–æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∫–∏–ª–ª–∞!"
        ]);
    }

    public function sendIntroFinishedMessage($data, $categories)
    {
        $reply_markup = $this->generateReplyMarkupForCategories($categories);

        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ß—Ç–æ–∂ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –ø–µ—Ä–≤—ã–º –Ω–∞–≤—ã–∫–æ–º! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ —á–µ–µ–µ–µ–ª",
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    public function sendSkillsList($data, $category)
    {
        $reply_markup = $this->generateReplyMarkupForSkills($category->skills);

        $result = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–í–∞—à–∏ –Ω–∞–≤—ã–∫–∏ –≤ <b>".$category->title.'</b>:',
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    public function sendNewSkillAdded($data, $categories)
    {
        $reply_markup = $this->generateReplyMarkupForCategories($categories);

        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ù–æ–≤—ã–π —Å–∫–∏–ª–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!",
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    public function sendCategoriesList($data, $categories)
    {
        $reply_markup = $this->generateReplyMarkupForCategories($categories);

        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    public function sendAskingForNewCategoryNameMessage($data)
    {
        $defaultMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!"
        ]);
    }

    public function newCategoryAdded($data, $categories)
    {
        $reply_markup = $this->generateReplyMarkupForCategories($categories);

        $congratulationMessage = TelegramRequest::sendMessage([
            'chat_id' => $data['chat_id'],
            'text' => "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞:",
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }
}
